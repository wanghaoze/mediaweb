<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingjusi.mediaweb.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.jingjusi.mediaweb.common.domain.Book">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="state" jdbcType="BIGINT" property="state" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="writer" jdbcType="VARCHAR" property="writer" />
    <result column="publish_time" jdbcType="DATE" property="publishTime" />
    <result column="number" jdbcType="BIGINT" property="number" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ISBN, location, state, book_name, publisher, writer, publish_time, number, operator
  </sql>
  <select id="selectByExample" parameterType="com.jingjusi.mediaweb.common.domain.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jing_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jing_book_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from jing_book_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jingjusi.mediaweb.common.domain.BookExample">
    delete from jing_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jingjusi.mediaweb.common.domain.Book">
    insert into jing_book_info (id, ISBN, location, 
      state, book_name, publisher, 
      writer, publish_time, number, 
      operator)
    values (#{id,jdbcType=BIGINT}, #{isbn,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{state,jdbcType=BIGINT}, #{bookName,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, 
      #{writer,jdbcType=VARCHAR}, #{publishTime,jdbcType=DATE}, #{number,jdbcType=BIGINT}, 
      #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jingjusi.mediaweb.common.domain.Book">
    insert into jing_book_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="writer != null">
        writer,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIGINT},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="writer != null">
        #{writer,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=DATE},
      </if>
      <if test="number != null">
        #{number,jdbcType=BIGINT},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jingjusi.mediaweb.common.domain.BookExample" resultType="java.lang.Long">
    select count(*) from jing_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jing_book_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.isbn != null">
        ISBN = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=BIGINT},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.writer != null">
        writer = #{record.writer,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=DATE},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=BIGINT},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jing_book_info
    set id = #{record.id,jdbcType=BIGINT},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=BIGINT},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      writer = #{record.writer,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=DATE},
      number = #{record.number,jdbcType=BIGINT},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jingjusi.mediaweb.common.domain.Book">
    update jing_book_info
    <set>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIGINT},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="writer != null">
        writer = #{writer,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=DATE},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=BIGINT},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jingjusi.mediaweb.common.domain.Book">
    update jing_book_info
    set ISBN = #{isbn,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIGINT},
      book_name = #{bookName,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      writer = #{writer,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=DATE},
      number = #{number,jdbcType=BIGINT},
      operator = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>